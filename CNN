{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMtolvZ4JjljkDaEh1BdBdV"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard","accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"QBl64H7Npitj"},"outputs":[],"source":["%matplotlib inline\n","from matplotlib import pyplot as plt\n","import cv2\n","import numpy as np\n","import tensorflow as tf\n","from google.colab.patches import cv2_imshow\n","\n","from tensorflow import keras\n","from tensorflow.keras import layers"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount(\"/content/drive/\")"],"metadata":{"id":"jCK0xR9mtOee","executionInfo":{"status":"ok","timestamp":1683159078173,"user_tz":-60,"elapsed":22681,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"a6b8f671-3e6c-42f3-d197-a3738ebf4fef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","sudoku_puzzles = pd.read_csv(\"/content/drive/MyDrive/Dissertation/sudoku.csv\")"],"metadata":{"id":"dvnuWyzjtZAf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["unsolved = sudoku_puzzles['quizzes'].to_numpy()\n","solved = sudoku_puzzles['solutions'].to_numpy()"],"metadata":{"id":"RlR2UShpuOfH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["quizzes = np.zeros((1000000, 81), np.int32)\n","solutions = np.zeros((1000000, 81), np.int32)\n","for i, line in enumerate(open('sudoku.csv', 'r').read().splitlines()[1:]):\n","    quiz, solution = line.split(\",\")\n","    for j, q_s in enumerate(zip(quiz, solution)):\n","        q, s = q_s\n","        quizzes[i, j] = q\n","        solutions[i, j] = s\n","print(quizzes[1].shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":244},"id":"Fs1KkQP5RBVB","executionInfo":{"status":"error","timestamp":1682255927888,"user_tz":-60,"elapsed":592,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"5717e7b0-2003-44ce-cec5-1f233d60b0e6"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-e7d4e6e84b16>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mquizzes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mzeros\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1000000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m81\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mint32\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0msolutions\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mzeros\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1000000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m81\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mint32\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mline\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msudoku_puzzles\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'r'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplitlines\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mquiz\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msolution\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mline\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\",\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mq_s\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mquiz\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msolution\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'np' is not defined"]}]},{"cell_type":"code","source":["#Auxiliary Function Used\n","#Verma, S. (2022). shivaverma/Sudoku-Solver. [online] GitHub. Available at: https://github.com/shivaverma/Sudoku-Solver [Accessed 4 May 2023].\n","\n","\n","from sklearn.model_selection import train_test_split\n","\n","def get_data(file):\n","\n","    data = pd.read_csv(file)\n","\n","    feat_raw = data['quizzes']\n","    label_raw = data['solutions']\n","\n","    feat = []\n","    label = []\n","\n","    for i in feat_raw:\n","\n","        x = np.array([int(j) for j in i]).reshape((9,9,1))\n","        feat.append(x)\n","\n","    feat = np.array(feat)\n","    feat = feat/9\n","    feat -= .5\n","\n","    for i in label_raw:\n","\n","        x = np.array([int(j) for j in i]).reshape((81,1)) - 1\n","        label.append(x)\n","\n","    label = np.array(label)\n","\n","    del(feat_raw)\n","    del(label_raw)\n","\n","    x_train, x_test, y_train, y_test = train_test_split(feat, label, test_size=0.2, random_state=42)\n","\n","    return x_train, x_test, y_train, y_test\n","\n","x_train, x_test, y_train, y_test = get_data(\"/content/drive/MyDrive/Dissertation/sudoku.csv\")\n"],"metadata":{"id":"iZNmBVvcP4CZ","executionInfo":{"status":"error","timestamp":1690235569789,"user_tz":-60,"elapsed":2874,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"49cfed5b-b2ca-4fa4-adc2-081f9edc5bb7","colab":{"base_uri":"https://localhost:8080/","height":336}},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-73691adb9912>\u001b[0m in \u001b[0;36m<cell line: 40>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     38\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     39\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 40\u001b[0;31m \u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/drive/MyDrive/Dissertation/sudoku.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-2-73691adb9912>\u001b[0m in \u001b[0;36mget_data\u001b[0;34m(file)\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mget_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m     \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m     \u001b[0mfeat_raw\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'quizzes'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}]},{"cell_type":"code","source":["print(unsolved[1])\n","print(solved[1])"],"metadata":{"id":"IYUbJ4KYxlv9","executionInfo":{"status":"error","timestamp":1681151218941,"user_tz":-60,"elapsed":187,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"colab":{"base_uri":"https://localhost:8080/","height":183},"outputId":"c5647c48-1685-45fa-ce46-22736f1248ca"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-591dc0fc832b>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0munsolved\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msolved\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'unsolved' is not defined"]}]},{"cell_type":"code","source":[],"metadata":{"id":"IWSTa_-dyx8V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["puzzle_one = unsolved[1]\n","puzzle_oneS = solved[1]\n","\n","us_array = []\n","s_array=[]\n","for letter in puzzle_one:\n","  us_array.append(int(letter))\n","\n","print(us_array)"],"metadata":{"id":"BQpvjd1_x1Az","executionInfo":{"status":"error","timestamp":1680206646440,"user_tz":-60,"elapsed":633,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"colab":{"base_uri":"https://localhost:8080/","height":235},"outputId":"2e15316a-e875-4aa1-e3da-320aaba31389"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-a41126c4212c>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpuzzle_one\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0munsolved\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mpuzzle_oneS\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msolved\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mus_array\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0ms_array\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'unsolved' is not defined"]}]},{"cell_type":"code","source":["print(quizzes[1].shape)\n","print(solutions[1].shape)\n","\n","#solutions = solutions.reshape((-1, 81, 1))\n","\n","print(solutions.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nQQRLdrVFnSn","executionInfo":{"status":"ok","timestamp":1680206878168,"user_tz":-60,"elapsed":798,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"cfa15fb4-0fed-4c1e-d7fd-e7d22de3e366"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(9, 9, 1)\n","(9, 9, 1)\n","(999000, 9, 9, 1)\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"MAob2dpz95Mg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["quizzes = quizzes[1000:]\n","solutions = solutions[1000:]\n","\n","from sklearn.model_selection import train_test_split\n","x_train, y_train, x_test, y_test = train_test_split(quizzes,solutions,train_size = 0.5)\n","\n"],"metadata":{"id":"bOW9yvR_kUDQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"-jYIvdof3G8L"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","from tensorflow.keras.layers import *\n","from tensorflow.keras.models import *\n","\n","\n","model = keras.models.Sequential()\n","\n","model.add(Conv2D(128, kernel_size=(3,3), activation='relu', padding='same', input_shape=(9,9,1)))\n","model.add(BatchNormalization())\n","model.add(Conv2D(64, kernel_size=(3,3), activation='relu', padding='same'))\n","model.add(BatchNormalization())\n","model.add(Conv2D(128, kernel_size=(3,3), activation='relu', padding='same'))\n","\n","model.add(Flatten())\n","model.add(Dense(81*9))\n","model.add(Reshape((-1, 9)))\n","model.add(Activation('softmax'))\n","\n","model.compile(\n","    loss=keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n","    optimizer=\"adam\",\n","    metrics=[\"accuracy\"],\n",")"],"metadata":{"id":"mmtBqOtdcAcR","colab":{"base_uri":"https://localhost:8080/","height":235},"executionInfo":{"status":"error","timestamp":1683567997483,"user_tz":-60,"elapsed":225,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"c1cf0f51-515d-488e-f9d0-30798c4815c5"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-ebac2ae274e5>\u001b[0m in \u001b[0;36m<cell line: 12>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSequential\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mConv2D\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m128\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkernel_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'relu'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpadding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'same'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_shape\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mBatchNormalization\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mConv2D\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m64\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkernel_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'relu'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpadding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'same'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'Conv2D' is not defined"]}]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U5tLuPrHljjL","executionInfo":{"status":"ok","timestamp":1683167269663,"user_tz":-60,"elapsed":591,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"e268dcc7-f468-4be2-b114-1befaa31d462"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d_3 (Conv2D)           (None, 9, 9, 128)         1280      \n","                                                                 \n"," batch_normalization_2 (Batc  (None, 9, 9, 128)        512       \n"," hNormalization)                                                 \n","                                                                 \n"," conv2d_4 (Conv2D)           (None, 9, 9, 64)          73792     \n","                                                                 \n"," batch_normalization_3 (Batc  (None, 9, 9, 64)         256       \n"," hNormalization)                                                 \n","                                                                 \n"," conv2d_5 (Conv2D)           (None, 9, 9, 128)         73856     \n","                                                                 \n"," flatten_1 (Flatten)         (None, 10368)             0         \n","                                                                 \n"," dense_1 (Dense)             (None, 729)               7559001   \n","                                                                 \n"," reshape_1 (Reshape)         (None, 81, 9)             0         \n","                                                                 \n"," activation_1 (Activation)   (None, 81, 9)             0         \n","                                                                 \n","=================================================================\n","Total params: 7,708,697\n","Trainable params: 7,708,313\n","Non-trainable params: 384\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model.fit(x_train, y_train, validation_data = (x_test, y_test), batch_size = 64, epochs=3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MaryTZaxce03","executionInfo":{"status":"ok","timestamp":1683159919864,"user_tz":-60,"elapsed":264779,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"89653f7b-a475-460e-c06e-d0b77a67a5e0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/3\n","12500/12500 [==============================] - 85s 7ms/step - loss: 0.4738 - accuracy: 0.7888 - val_loss: 0.3659 - val_accuracy: 0.8247\n","Epoch 2/3\n","12500/12500 [==============================] - 83s 7ms/step - loss: 0.3536 - accuracy: 0.8325 - val_loss: 0.3489 - val_accuracy: 0.8355\n","Epoch 3/3\n","12500/12500 [==============================] - 83s 7ms/step - loss: 0.3376 - accuracy: 0.8429 - val_loss: 0.3415 - val_accuracy: 0.8402\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fae37133580>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["model.save(\"my_model.h5\", include_optimizer=True)\n"],"metadata":{"id":"-T19xyefYKXV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_puzzle = ['070000043040009610800634900094052000358460020000800530080070091902100005007040802']\n","\n","puzz = []\n","\n","for i in test_puzzle:\n","\n","  x = np.array([int(j) for j in i]).reshape((9,9,1))\n","  puzz.append(x)\n","\n","puzz = np.array(puzz)\n","puzz = puzz/9\n","puzz -= .5\n"],"metadata":{"id":"eDAHe-HpLpSE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_puzzle = ['070000043040009610800634900094052000358460020000800530080070091902100005007040802']\n","\n","puzz6 = []\n","\n","for i in test_puzzle:\n","\n","  x = np.array([int(j) for j in i]).reshape((9,9))\n","  puzz6.append(x)\n","\n","puzz6 = np.array(puzz6)"],"metadata":{"id":"WudhRjaswniO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(puzz6)"],"metadata":{"id":"DzUoFUZdwuIr","executionInfo":{"status":"ok","timestamp":1683170195922,"user_tz":-60,"elapsed":5,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"7f87ce92-589d-4e6d-cc2b-cdc85b098f5e","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[0 7 0 0 0 0 0 4 3]\n","  [0 4 0 0 0 9 6 1 0]\n","  [8 0 0 6 3 4 9 0 0]\n","  [0 9 4 0 5 2 0 0 0]\n","  [3 5 8 4 6 0 0 2 0]\n","  [0 0 0 8 0 0 5 3 0]\n","  [0 8 0 0 7 0 0 9 1]\n","  [9 0 2 1 0 0 0 0 5]\n","  [0 0 7 0 4 0 8 0 2]]]\n"]}]},{"cell_type":"code","source":["test_puzzle.to_numpy()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":165},"id":"tsLjgZvCOFch","executionInfo":{"status":"error","timestamp":1683161161159,"user_tz":-60,"elapsed":371,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"f3a999ca-2f73-4f64-8fd3-dabf09864c40"},"execution_count":null,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-27-9d8e98ee4ef9>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtest_puzzle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_numpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'str' object has no attribute 'to_numpy'"]}]},{"cell_type":"code","source":["puzz.type\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":165},"id":"-0p3GRetaZ-G","executionInfo":{"status":"error","timestamp":1683164353995,"user_tz":-60,"elapsed":7,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"8e3210bf-a31d-43e7-f785-5d1e1c66cea3"},"execution_count":null,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-76-28a5cf6531a8>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpuzz\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'numpy.ndarray' object has no attribute 'type'"]}]},{"cell_type":"code","source":["print(puzz)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WiVQUTCMMqpd","executionInfo":{"status":"ok","timestamp":1683162121933,"user_tz":-60,"elapsed":347,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"2914a32c-8616-4876-b96c-8b9d6eb9ccc3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[[-0.5       ]\n","   [ 0.27777778]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [-0.05555556]\n","   [-0.16666667]]\n","\n","  [[-0.5       ]\n","   [-0.05555556]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [ 0.5       ]\n","   [ 0.16666667]\n","   [-0.38888889]\n","   [-0.5       ]]\n","\n","  [[ 0.38888889]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [ 0.16666667]\n","   [-0.16666667]\n","   [-0.05555556]\n","   [ 0.5       ]\n","   [-0.5       ]\n","   [-0.5       ]]\n","\n","  [[-0.5       ]\n","   [ 0.5       ]\n","   [-0.05555556]\n","   [-0.5       ]\n","   [ 0.05555556]\n","   [-0.27777778]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [-0.5       ]]\n","\n","  [[-0.16666667]\n","   [ 0.05555556]\n","   [ 0.38888889]\n","   [-0.05555556]\n","   [ 0.16666667]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [-0.27777778]\n","   [-0.5       ]]\n","\n","  [[-0.5       ]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [ 0.38888889]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [ 0.05555556]\n","   [-0.16666667]\n","   [-0.5       ]]\n","\n","  [[-0.5       ]\n","   [ 0.38888889]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [ 0.27777778]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [ 0.5       ]\n","   [-0.38888889]]\n","\n","  [[ 0.5       ]\n","   [-0.5       ]\n","   [-0.27777778]\n","   [-0.38888889]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [-0.5       ]\n","   [ 0.05555556]]\n","\n","  [[-0.5       ]\n","   [-0.5       ]\n","   [ 0.27777778]\n","   [-0.5       ]\n","   [-0.05555556]\n","   [-0.5       ]\n","   [ 0.38888889]\n","   [-0.5       ]\n","   [-0.27777778]]]]\n"]}]},{"cell_type":"code","source":["test2 = model.predict(puzz.reshape((1,9,9,1)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Saf15QI5M3hc","executionInfo":{"status":"ok","timestamp":1683164052507,"user_tz":-60,"elapsed":396,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"e33f69a9-4925-4897-9c2c-4793bdb00e43"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 20ms/step\n"]}]},{"cell_type":"code","source":["print(test2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ns7x8K2IM-Wp","executionInfo":{"status":"ok","timestamp":1683164056754,"user_tz":-60,"elapsed":293,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"dcd1ad63-ff19-4d9e-fc46-0dee046851af"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[1.11682907e-01 1.36978552e-01 8.88169964e-08 8.95470293e-07\n","   3.34908664e-01 4.15101767e-01 1.00843892e-04 2.79668544e-04\n","   9.46628570e-04]\n","  [2.00397935e-05 4.12494628e-05 2.58529269e-08 9.61928176e-11\n","   1.03028830e-08 1.05837666e-04 9.99832511e-01 5.12851255e-11\n","   3.63014635e-07]\n","  [1.00660399e-02 1.86915645e-06 4.23666934e-05 6.41256796e-12\n","   1.55237336e-02 1.89801492e-02 9.37379951e-10 1.09753833e-08\n","   9.55385864e-01]\n","  [4.13945876e-04 7.56651938e-01 1.07052635e-07 5.73581627e-10\n","   2.41012305e-01 4.56319685e-04 1.15071575e-03 9.84238650e-05\n","   2.16297340e-04]\n","  [6.69995189e-01 9.20749605e-02 1.97397831e-08 1.71359121e-10\n","   4.15189388e-05 1.22229466e-07 1.84199713e-08 2.37862855e-01\n","   2.54302195e-05]\n","  [2.70724148e-01 6.23544020e-06 1.55380917e-08 3.94161106e-07\n","   5.08615412e-02 8.20877394e-05 1.31315770e-04 6.78180158e-01\n","   1.40386683e-05]\n","  [4.54021356e-05 9.99200165e-01 2.24781848e-04 8.06892785e-05\n","   1.91799008e-05 1.23151040e-04 5.27588963e-05 5.55340921e-05\n","   1.98374022e-04]\n","  [1.50790458e-09 2.92334179e-09 3.78937680e-12 9.99962807e-01\n","   1.26740106e-05 3.87207510e-09 2.30806774e-09 2.45193532e-05\n","   8.75735422e-12]\n","  [2.89034855e-13 4.51556487e-10 9.99999523e-01 7.84267939e-09\n","   9.34358368e-10 3.23806870e-09 6.83539059e-10 5.24008385e-07\n","   7.72985675e-09]\n","  [4.31208464e-05 2.10804850e-01 1.02002907e-03 1.33517070e-03\n","   7.84388244e-01 6.84790721e-04 4.72370593e-04 1.25075015e-03\n","   6.51686150e-07]\n","  [2.76698997e-10 9.03092939e-07 1.41709688e-05 9.99984860e-01\n","   1.84220839e-09 3.12712234e-09 2.54720556e-09 8.20939454e-13\n","   7.71716241e-13]\n","  [2.89609707e-05 1.96734563e-05 8.59330893e-01 1.00225982e-07\n","   1.39259517e-01 1.26523344e-04 9.87586812e-09 9.88082860e-08\n","   1.23416760e-03]\n","  [1.55741908e-08 1.00602500e-01 4.58683317e-05 4.67110794e-11\n","   1.40516311e-01 5.19683105e-08 7.58733273e-01 5.56719096e-05\n","   4.63464748e-05]\n","  [2.14507061e-04 4.00349230e-01 1.24830825e-04 3.44855644e-10\n","   2.63457710e-04 1.15890200e-10 5.38923661e-04 5.98375678e-01\n","   1.33419875e-04]\n","  [2.16274607e-08 3.35394610e-08 7.00511862e-08 2.68301853e-10\n","   6.17806290e-05 1.66388448e-11 1.80176619e-04 2.46514275e-04\n","   9.99511361e-01]\n","  [2.01620214e-08 1.23215315e-04 9.95522456e-08 1.33934062e-11\n","   1.41016665e-08 9.99870420e-01 6.21756408e-06 1.26461996e-08\n","   1.54481913e-10]\n","  [9.99978304e-01 3.09984438e-09 1.75304866e-12 1.77781477e-12\n","   6.78980723e-06 1.89491867e-09 1.85913530e-06 1.30214248e-05\n","   1.13909660e-14]\n","  [1.25060096e-08 6.67430722e-05 4.56217502e-04 1.42146078e-07\n","   4.50645057e-05 1.06162857e-04 1.83855101e-01 8.15469146e-01\n","   1.37103120e-06]\n","  [7.28781788e-06 5.42399266e-06 1.73840814e-12 2.33146315e-11\n","   5.16680211e-06 5.86157956e-10 9.81287762e-09 9.99982119e-01\n","   4.83697284e-12]\n","  [6.90393090e-01 3.08607042e-01 6.06558227e-04 3.58459886e-07\n","   1.62619035e-04 1.04595179e-04 1.25551436e-04 1.16814320e-07\n","   1.09109003e-07]\n","  [5.54696083e-01 1.89402472e-05 6.84450730e-04 1.28779293e-10\n","   4.43172634e-01 5.37112210e-05 3.88498762e-08 1.17479033e-07\n","   1.37398939e-03]\n","  [1.33069011e-09 2.90981029e-06 1.10947751e-09 2.12685512e-12\n","   1.70481098e-06 9.99989033e-01 6.47006937e-06 9.94606890e-14\n","   2.49710647e-12]\n","  [1.13297237e-05 2.29867555e-06 9.99986410e-01 3.12218931e-11\n","   3.43083717e-09 2.29220636e-12 1.21136368e-09 4.33812403e-10\n","   5.13323368e-12]\n","  [6.73910336e-07 1.54247976e-10 2.96033975e-10 9.99997258e-01\n","   3.45490207e-07 1.34622702e-10 1.73989099e-06 2.37825537e-10\n","   6.19985617e-13]\n","  [1.11064447e-08 6.25085086e-05 7.35949062e-12 2.30153049e-12\n","   2.14584261e-09 5.28167462e-13 1.15208531e-05 3.20806055e-12\n","   9.99925971e-01]\n","  [6.19714920e-05 5.49563789e-04 3.93817756e-11 8.49684483e-08\n","   4.01663333e-01 1.27501476e-08 5.96794784e-01 9.29749745e-04\n","   4.16615535e-07]\n","  [2.96092026e-07 2.49613688e-04 1.47157721e-07 1.80855000e-06\n","   1.69971448e-04 7.56118723e-08 9.98998344e-01 1.87684447e-04\n","   3.92055372e-04]\n","  [8.78736973e-02 2.76103558e-04 1.90182152e-04 9.46311920e-05\n","   1.70118838e-07 1.76518783e-01 7.35046327e-01 1.30100332e-07\n","   5.65820812e-09]\n","  [5.21943366e-06 6.09679907e-09 5.28216004e-09 6.35472740e-13\n","   3.27393126e-12 5.57728299e-06 3.86248411e-09 2.61592865e-11\n","   9.99989152e-01]\n","  [6.38940776e-07 1.32155124e-13 3.84330345e-09 9.99996662e-01\n","   2.24190805e-12 2.70039732e-06 3.17281867e-10 1.59973323e-09\n","   2.06050885e-10]\n","  [4.66916754e-05 5.29771642e-05 7.68603802e-01 8.71984582e-08\n","   6.01342763e-04 8.19017814e-08 2.30597168e-01 5.02908770e-05\n","   4.75887973e-05]\n","  [7.88458419e-06 8.04802980e-09 1.08204539e-08 8.89323185e-16\n","   9.99992132e-01 4.86135354e-09 1.14769039e-09 3.31629324e-09\n","   7.32232319e-09]\n","  [5.83480914e-06 9.99945760e-01 3.85238491e-05 1.61431023e-15\n","   4.46439046e-08 1.77922583e-08 9.78301068e-06 8.87038798e-09\n","   3.45971060e-12]\n","  [7.07484782e-01 6.33466470e-07 3.16888583e-03 3.14348901e-04\n","   2.18172133e-07 3.45340231e-04 2.87529022e-01 1.15657330e-03\n","   7.96771644e-08]\n","  [5.43251699e-05 5.51698491e-08 8.98198414e-05 3.49391698e-08\n","   1.77071954e-07 6.17226623e-02 9.52727795e-02 8.42860103e-01\n","   2.78112857e-08]\n","  [1.40144140e-04 2.28219288e-12 5.82888440e-08 9.78945245e-05\n","   3.49455469e-12 1.08293034e-01 2.39194520e-02 8.67527544e-01\n","   2.18532859e-05]\n","  [5.18461366e-06 1.31847466e-08 9.99957919e-01 3.29709632e-12\n","   1.73572570e-08 6.27400798e-09 3.67548673e-05 8.09344432e-12\n","   7.33121463e-12]\n","  [1.25641682e-05 5.71425716e-08 4.68805217e-09 1.08795093e-15\n","   9.99987364e-01 9.10800857e-09 8.90982577e-09 1.74137146e-11\n","   5.81288173e-09]\n","  [9.50836409e-07 6.64965587e-14 3.71402520e-10 2.40585899e-13\n","   2.72994694e-09 9.62547819e-10 1.23331245e-09 9.99999046e-01\n","   5.74680192e-10]\n","  [1.82213536e-10 1.92032059e-13 8.84734785e-10 9.99996662e-01\n","   3.46087498e-13 1.80045771e-13 1.18889750e-06 2.61888967e-14\n","   2.08926008e-06]\n","  [1.91588169e-05 3.40067666e-12 1.07455008e-11 2.95293651e-12\n","   2.51565661e-11 9.99844193e-01 8.42889758e-09 9.38492665e-13\n","   1.36562419e-04]\n","  [6.75329804e-01 4.68957708e-08 7.71239691e-04 1.93277359e-07\n","   2.14874802e-07 4.62910481e-04 3.21374446e-01 4.15053734e-08\n","   2.06112675e-03]\n","  [8.28848004e-01 4.90229868e-04 1.60280038e-07 8.56825354e-05\n","   2.95618374e-08 1.14260033e-07 1.70158207e-01 8.26916580e-09\n","   4.17538919e-04]\n","  [1.18009980e-09 9.99999881e-01 1.68846829e-13 1.51713169e-13\n","   5.00336263e-13 1.58312863e-09 1.19960660e-07 1.41046619e-10\n","   8.27641689e-09]\n","  [9.48595523e-04 2.86051467e-08 2.78068922e-11 1.43823097e-04\n","   4.36231259e-12 4.08024382e-04 2.45044846e-02 2.56786043e-05\n","   9.73969340e-01]\n","  [2.10628808e-02 6.42472386e-01 7.88149990e-09 1.21067751e-04\n","   2.51502783e-08 9.42673758e-02 2.42076173e-01 1.36159113e-11\n","   1.58367108e-09]\n","  [2.61993296e-02 9.33283925e-01 2.44955025e-08 1.17761392e-08\n","   1.24640147e-08 4.03537340e-02 1.61940014e-04 3.09286347e-11\n","   1.03821526e-06]\n","  [1.26737863e-01 1.22688711e-04 1.69311292e-07 3.83877166e-04\n","   1.10314055e-07 8.72255564e-01 3.95153649e-04 2.97377369e-07\n","   1.04293802e-04]\n","  [9.56570725e-11 3.45645845e-10 2.20462004e-09 2.36680497e-09\n","   2.63486281e-13 3.74041211e-13 6.70003828e-07 9.99996185e-01\n","   3.09139023e-06]\n","  [2.92866994e-02 4.98495028e-05 5.58968516e-08 5.74164609e-08\n","   1.75975838e-08 7.96677123e-05 1.64386838e-05 2.54064253e-05\n","   9.70541775e-01]\n","  [5.07042646e-01 2.77523905e-05 6.07760390e-04 5.90045431e-07\n","   1.50954193e-07 1.88482605e-04 4.91467535e-01 2.79018423e-04\n","   3.86034633e-04]\n","  [9.44878664e-08 1.79087439e-10 1.02592837e-10 1.05193476e-06\n","   9.99998808e-01 6.28266467e-11 2.63536890e-08 2.70415218e-14\n","   2.21881999e-10]\n","  [1.00120745e-09 5.48336354e-09 9.99996305e-01 1.25231105e-08\n","   1.13348548e-08 2.94573238e-06 7.18641957e-07 2.65426814e-09\n","   8.53134274e-09]\n","  [1.25464494e-05 3.21345017e-09 6.57019594e-09 9.04102921e-01\n","   1.58463476e-09 5.60072288e-02 3.36824893e-03 8.22794300e-06\n","   3.65008451e-02]\n","  [1.14626164e-04 2.08604870e-05 2.03022828e-05 6.82099402e-01\n","   2.61560827e-01 5.61837852e-02 1.18162134e-07 3.29865735e-08\n","   5.99941163e-09]\n","  [3.11393999e-09 9.04336439e-10 8.48486081e-07 1.30614486e-09\n","   3.13776449e-09 6.18343165e-07 4.85114192e-16 9.99998569e-01\n","   6.39789992e-17]\n","  [2.38175533e-04 5.21896582e-05 1.45980552e-01 2.48414523e-04\n","   7.13352203e-01 1.40127808e-01 6.78326799e-08 5.54594124e-07\n","   7.39236725e-08]\n","  [3.28024825e-08 6.31417692e-01 2.01714575e-01 9.50231822e-08\n","   1.66203216e-01 3.78635814e-05 1.28567408e-04 4.35397709e-08\n","   4.97883302e-04]\n","  [7.92687704e-12 7.95606393e-05 2.92824565e-09 9.31510868e-09\n","   3.98993683e-09 1.73125319e-08 9.99920368e-01 5.67565124e-08\n","   1.29993483e-08]\n","  [8.67792522e-08 7.57962262e-05 1.17215738e-01 2.40705901e-07\n","   4.04311210e-01 4.76997524e-01 2.25622891e-04 1.17368950e-03\n","   9.22171637e-08]\n","  [2.29248850e-04 4.18606534e-04 5.89092910e-01 4.09787953e-01\n","   1.39503484e-08 1.87854836e-04 2.83010479e-04 1.68973813e-08\n","   4.13005608e-07]\n","  [2.97175370e-12 3.04216309e-12 7.38069339e-09 2.71646949e-09\n","   1.78618920e-09 4.43931776e-06 9.99045913e-09 4.20519349e-12\n","   9.99995589e-01]\n","  [9.99933243e-01 1.14107380e-07 1.99926458e-08 4.25290636e-05\n","   4.94058527e-09 2.39049241e-05 1.22133113e-08 2.97463638e-12\n","   7.65703803e-08]\n","  [3.63381242e-10 4.38601412e-11 1.70258807e-10 5.13486930e-06\n","   1.63579900e-10 1.18934146e-07 4.08092476e-10 7.15906663e-13\n","   9.99994755e-01]\n","  [6.85407897e-04 2.66771240e-04 7.69376159e-01 2.27475073e-03\n","   4.14599384e-07 2.26496816e-01 2.57476302e-07 8.99264065e-04\n","   1.65292249e-07]\n","  [4.31876535e-09 9.99995828e-01 2.91573565e-06 4.64229322e-09\n","   1.83012494e-09 1.34880565e-06 5.17164622e-09 2.74750795e-11\n","   7.45478512e-10]\n","  [9.99987483e-01 1.01941460e-08 1.25745746e-05 3.41693189e-12\n","   2.53988675e-09 2.79840329e-09 8.44642489e-09 1.68264147e-09\n","   1.14252670e-08]\n","  [3.61520179e-05 1.96346678e-04 6.15515091e-05 1.61652453e-04\n","   2.75074221e-08 2.60283356e-04 1.03714810e-04 9.99134123e-01\n","   4.61358868e-05]\n","  [1.72679884e-05 4.30043423e-09 4.93854880e-02 3.82579941e-08\n","   6.84928018e-05 2.76167512e-01 3.89483903e-05 6.74322128e-01\n","   9.08999986e-09]\n","  [3.36567183e-08 6.14507645e-09 2.86683559e-01 4.74388599e-01\n","   4.49626247e-09 4.58114591e-05 2.38865539e-01 1.64023731e-05\n","   5.92272021e-12]\n","  [1.99643097e-11 8.71128777e-12 1.15456205e-04 2.57165346e-04\n","   3.98620614e-05 1.99592456e-01 7.99792171e-01 2.02854484e-04\n","   1.40774850e-08]\n","  [3.83567180e-12 9.12063827e-13 7.12279213e-09 1.35410510e-05\n","   9.99971271e-01 4.30127147e-06 1.08757058e-05 5.46723777e-09\n","   1.06514641e-11]\n","  [2.88972944e-01 1.80513471e-08 4.26561710e-05 2.13313600e-04\n","   6.41314924e-01 6.92717358e-02 1.06126303e-04 5.93950653e-11\n","   7.83098149e-05]\n","  [6.25252724e-01 3.12808837e-08 2.61770815e-01 7.61211112e-08\n","   3.31251882e-04 1.12645030e-01 2.20298890e-08 2.73258038e-08\n","   1.11426539e-08]\n","  [3.44784303e-06 4.52112916e-14 3.14189924e-06 2.87838655e-13\n","   3.23570384e-06 8.51779646e-07 9.99989390e-01 4.87238762e-16\n","   8.97561081e-10]\n","  [2.01045386e-05 3.23378132e-04 7.71068782e-02 9.59591162e-09\n","   1.76201776e-01 1.29766540e-05 1.13221992e-08 1.52773829e-08\n","   7.46334851e-01]\n","  [1.02712407e-08 7.03047753e-09 1.36708334e-09 9.99960899e-01\n","   1.24902433e-09 7.12515069e-09 1.30619853e-12 8.97679708e-09\n","   3.91313624e-05]\n","  [1.10357840e-04 1.29105004e-07 7.69809633e-02 4.32146230e-08\n","   3.70071381e-01 5.51528037e-01 2.43513600e-08 4.13225527e-04\n","   8.95840873e-04]\n","  [1.94647303e-08 1.48230672e-09 7.82341249e-06 2.63545075e-09\n","   2.27611604e-13 3.15700799e-09 2.18208318e-09 9.99992132e-01\n","   4.36963443e-12]\n","  [5.27689906e-07 4.45740760e-08 6.10175950e-04 2.36658110e-07\n","   4.34073590e-04 9.98113275e-01 1.81386960e-04 2.09518679e-04\n","   4.50874271e-04]\n","  [1.05224398e-08 9.99999046e-01 2.76632361e-09 4.02230416e-10\n","   5.62804359e-10 1.00433317e-06 4.21403662e-10 1.71191250e-09\n","   1.86457694e-08]]]\n"]}]},{"cell_type":"code","source":["def norm(a):\n","\n","    return (a/9)-.5\n","def denorm(a):\n","\n","    return (a+.5)*9\n"],"metadata":{"id":"bhaf7hHxT4JJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test2.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9UYveHrTX2Od","executionInfo":{"status":"ok","timestamp":1683164062013,"user_tz":-60,"elapsed":4,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"dbc1333d-b256-4005-9c8b-e8e44e29661d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1, 81, 9)"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["squeeze_test=test2.squeeze"],"metadata":{"id":"7xPteor3SGE0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":165},"id":"-6y282AyZJXo","executionInfo":{"status":"error","timestamp":1683164017643,"user_tz":-60,"elapsed":5,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"97ebe928-02bd-40c1-f949-b56092569e47"},"execution_count":null,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-62-616e9855d55a>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msqueeze_test\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'builtin_function_or_method' object has no attribute 'shape'"]}]},{"cell_type":"code","source":["pred = np.argmax(squeeze_test, axis=1).reshape((9,9))+1\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":311},"id":"kDZl4A6WYjnT","executionInfo":{"status":"error","timestamp":1683164142425,"user_tz":-60,"elapsed":6,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"2886562d-0229-41ff-ca37-76b8e3da9150"},"execution_count":null,"outputs":[{"output_type":"error","ename":"AxisError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAxisError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-71-23653c855db7>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msqueeze_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/numpy/core/overrides.py\u001b[0m in \u001b[0;36margmax\u001b[0;34m(*args, **kwargs)\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py\u001b[0m in \u001b[0;36margmax\u001b[0;34m(a, axis, out, keepdims)\u001b[0m\n\u001b[1;32m   1214\u001b[0m     \"\"\"\n\u001b[1;32m   1215\u001b[0m     \u001b[0mkwds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'keepdims'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mkeepdims\u001b[0m\u001b[0;34m}\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mkeepdims\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NoValue\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1216\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_wrapfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'argmax'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1217\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1218\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py\u001b[0m in \u001b[0;36m_wrapfunc\u001b[0;34m(obj, method, *args, **kwds)\u001b[0m\n\u001b[1;32m     52\u001b[0m     \u001b[0mbound\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     53\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mbound\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 54\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_wrapit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     55\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     56\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py\u001b[0m in \u001b[0;36m_wrapit\u001b[0;34m(obj, method, *args, **kwds)\u001b[0m\n\u001b[1;32m     41\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m         \u001b[0mwrap\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 43\u001b[0;31m     \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     44\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mwrap\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     45\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmu\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAxisError\u001b[0m: axis 1 is out of bounds for array of dimension 1"]}]},{"cell_type":"code","source":["#Auxiliary Function Used\n","#Verma, S. (2022). shivaverma/Sudoku-Solver. [online] GitHub. Available at: https://github.com/shivaverma/Sudoku-Solver [Accessed 4 May 2023].\n","\n","\n","import copy\n","import keras\n","import numpy as np\n","\n","\n","def norm(a):\n","\n","    return (a/9)-.5\n","def denorm(a):\n","\n","    return (a+.5)*9\n","\n","\n","\n","\n","def inference_sudoku(sample):\n","\n","    '''\n","        This function solve the sudoku by filling blank positions one by one.\n","    '''\n","\n","    feat = copy.copy(sample)\n","\n","    while(1):\n","\n","        out = model.predict(feat.reshape((1,9,9,1)))\n","        out = out.squeeze()\n","\n","        pred = np.argmax(out, axis=1).reshape((9,9))+1\n","        prob = np.around(np.max(out, axis=1).reshape((9,9)), 2)\n","\n","        feat = denorm(feat).reshape((9,9))\n","        mask = (feat==0)\n","\n","        if(mask.sum()==0):\n","            break\n","\n","        prob_new = prob*mask\n","\n","        ind = np.argmax(prob_new)\n","        x, y = (ind//9), (ind%9)\n","\n","        val = pred[x][y]\n","        feat[x][y] = val\n","        feat = norm(feat)\n","\n","    return pred"],"metadata":{"id":"PgnZGgMnNWbM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["predpuzz = inference_sudoku(puzz)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mJ7XmQONZrqv","executionInfo":{"status":"ok","timestamp":1683165174386,"user_tz":-60,"elapsed":2893,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"5c54f65d-fc00-4edb-a8a7-01622a069660"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n"]}]},{"cell_type":"code","source":["print(predpuzz)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mHOy-gjKdnlN","executionInfo":{"status":"ok","timestamp":1683165190787,"user_tz":-60,"elapsed":3,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"c80dcfd2-c937-41e3-ea6a-b7f553b7ce85"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[6 7 9 5 1 8 2 4 3]\n"," [5 4 3 7 2 9 6 1 8]\n"," [8 2 1 6 3 4 9 5 7]\n"," [7 9 4 3 5 2 1 8 6]\n"," [3 5 8 4 6 1 7 2 9]\n"," [2 1 6 8 9 7 5 3 4]\n"," [4 8 5 2 7 6 3 9 1]\n"," [9 6 2 1 8 3 4 7 5]\n"," [1 3 7 9 4 5 8 6 2]]\n"]}]},{"cell_type":"code","source":["puzz_solved = ['679518243543729618821634957794352186358461729216897534485276391962183475137945862']\n","puzz_solvedc = []\n","\n","for i in puzz_solved:\n","\n","  x = np.array([int(j) for j in i]).reshape((9,9,1))\n","  puzz_solvedc.append(x)\n","\n","puzz_solvedc = np.array(puzz_solvedc)\n","\n","\n"],"metadata":{"id":"nyToJP2LaqEQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["puzz_solvedc.reshape(9,9)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xCh9r9Elc92p","executionInfo":{"status":"ok","timestamp":1683165109217,"user_tz":-60,"elapsed":8,"user":{"displayName":"Kareem Hamed","userId":"14793301589637434773"}},"outputId":"8f7c38d1-539a-4f02-d8ad-9bb5edd3dbc8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[6, 7, 9, 5, 1, 8, 2, 4, 3],\n","       [5, 4, 3, 7, 2, 9, 6, 1, 8],\n","       [8, 2, 1, 6, 3, 4, 9, 5, 7],\n","       [7, 9, 4, 3, 5, 2, 1, 8, 6],\n","       [3, 5, 8, 4, 6, 1, 7, 2, 9],\n","       [2, 1, 6, 8, 9, 7, 5, 3, 4],\n","       [4, 8, 5, 2, 7, 6, 3, 9, 1],\n","       [9, 6, 2, 1, 8, 3, 4, 7, 5],\n","       [1, 3, 7, 9, 4, 5, 8, 6, 2]])"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["test_puzzle = ['070000043040009610800634900094052000358460020000800530080070091902100005007040802']\n","\n","puzz = []\n","\n","for i in test_puzzle:\n","\n","  x = np.array([int(j) for j in i]).reshape((9,9,1))\n","  puzz.append(x)\n","\n","puzz = np.array(puzz)\n","puzz = puzz/9\n","puzz -= .5"],"metadata":{"id":"GSjVMre_b6uh"},"execution_count":null,"outputs":[]}]}